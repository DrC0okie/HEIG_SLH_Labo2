<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <title>SLH - Lab2</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet" type="text/css" />
    <link href="https://fonts.googleapis.com/css?family=Lato:300,400,700,300italic,400italic,700italic" rel="stylesheet" type="text/css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/5.0.0/mdb.min.css" rel="stylesheet"/>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
</head>

<body class="d-flex flex-column min-vh-100" onload="verification_status()">
    <nav class="navbar navbar-light bg-light static-top">
        <div class="container">
            <a class="navbar-brand" href="/">SLH - Lab2</a>
            {{#if email}}
                <span class="welcome_back">Welcome back {{email}}</span>
                <span class="nav-item ms-auto me-4" id="welcome_back_logout">
                    <a href="#" onclick="logout()">
                        <span class="logout">Logout</span>
                    </a>
                </span>
            {{/if}}
            {{#unless email}}
                <a class="btn btn-primary" href="/login">Login</a>
            {{/unless}}

        </div>
    </nav>
    {{#if email}}
        <div class="text-center m-5">
            <h3>Welcome to the website.</h3>
            <p>You are logged in</p>

            <h4>Change password</h4>
            <form style="margin: auto; max-width:250px;">
                <!-- Old password -->
                <div class="form-outline mb-4">
                    <input type="password" id="old_password" name="old_password" class="form-control" />
                    <label class="form-label" for="old_password">Old password</label>
                </div>

                <!-- New password -->
                <div class="form-outline mb-4">
                    <input type="password" id="new_password" name="new_password" class="form-control" />
                    <label class="form-label" for="new_password">New password</label>
                </div>

                <!-- Confirmation -->
                <div class="form-outline mb-4">
                    <input type="password" id="confirmation" name="confirmation" class="form-control" />
                    <label class="form-label" for="confirmation">Confirm new password</label>
                </div>

                <!-- Password strength progress bar -->
                <div id="password-strength-bar" class="progress mt-2" style="height: 8px;">
                    <div class="progress-bar" role="progressbar" style="width: 0" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                </div>

                <!-- Password strength text -->
                <div id="password-strength-text" class="mt-2" style="margin-bottom: 24px">Password strength:</div>

                <!-- anti-CSRF token -->
                <input type="hidden" id="csrf" name="csrf" value="{{token}}" />

                <!-- Submit button -->
                <button type="submit" onclick="change_password(event)" class="btn btn-primary btn-block mb-4">Change password</button>
            </form>
        </div>
    {{/if}}
    {{#unless email}}
        <div class="text-center m-5">
            <h3>You are not logged in</h3>
        </div>
    {{/unless}}
    <div class="text-center">
        <small id="pwd_success" class="text-success"></small>
        <small id="verify_success" class="text-success"></small>
        <small id="verify_error" class="text-warning"></small>
        <small id="access_error" class="text-warning"></small>
        <small id="pwd_error" class="text-warning"></small>
    </div>
    <footer class="footer bg-dark mt-auto">
        <div class="container">
            <div class="row">
                <div class="col-lg-6 h-100 text-center text-lg-start my-auto">
                    <p class="text-muted small mb-4 mb-lg-0">Demonstration website built with MDM, Bootstrap, Font Awesome.</p>
                </div>
                <div class="col-lg-6 h-100 text-center text-lg-end my-auto">
                    <ul class="list-inline mb-0">
                    </ul>
                </div>
            </div>
        </div>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/5.0.0/mdb.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.1.min.js" integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=" crossorigin="anonymous"></script>
    <!-- zxcvbn -->
    <script src="https://cdn.jsdelivr.net/npm/zxcvbn@4.4.2/dist/zxcvbn.js"></script>
    <script>

        $(document).ready(function() {
            $('#new_password').on('input', function() {
                let password = $(this).val();
                updatePasswordStrength(password);
            });
        });

        function updatePasswordStrength(password) {
            let strength = zxcvbn(password);
            let hint = strength.feedback.warning;
            let strengthValue = 20 + strength.score * 20;

            // Update progress bar
            let progressBar = $('#password-strength-bar .progress-bar');
            progressBar.css('width', strengthValue + '%');

            progressBar.removeClass('bg-danger bg-warning bg-info bg-success');

            // Update strength text based on the score
            let strengthText = $('#password-strength-text');
            switch(strength.score) {
                case 0:
                    strengthText.text('Password strength too weak. ' + hint);
                    progressBar.addClass('bg-danger');
                    break;
                case 1:
                    strengthText.text('Password strength: Weak. ' + hint);
                    progressBar.addClass('bg-danger');
                    break;
                case 2:
                    strengthText.text('Password strength: Fair. ' + hint);
                    progressBar.addClass('bg-warning');
                    break;
                case 3:
                    strengthText.text('Password strength: Good. ' + hint);
                    progressBar.addClass('bg-info');
                    break;
                case 4:
                    strengthText.text('Password strength: Strong. ' + hint);
                    progressBar.addClass('bg-success');
                    break;
            }
        }

        function logout() {
            localStorage.clear()
            window.location.href = '/logout'
        }
        $.get = function(url, callback, err, with_refresh = true) {
            const config = {
                type: 'GET',
                url,
                success: callback,
                error: err,
            }
            if (with_refresh) config['headers'] = {"Authorization": "Bearer " + localStorage.getItem("refresh")}
            return jQuery.ajax(config)
        }
        $.postJSON = function(url, data, callback, err, json) {
            const config = {
                'type': 'POST',
                'url': url,
                'contentType': 'application/json',
                'data': JSON.stringify(data),
                'success': callback,
                "error": err
            }
            if (json) config["dataType"] = "json"
            return jQuery.ajax(config)
        }
        function change_password(e) {
            e.preventDefault()
            $.postJSON(
                "/change-password",
                {
                    old_password: $('#old_password').val(),
                    password: $('#new_password').val(),
                    password2: $('#confirmation').val(),
                    csrf: $('#csrf').val(),
                },
                () => {
                    $('#pwd_error').text('')
                    $('#pwd_success').text('Password changed, you will be logged out in 5s')
                    clearInterval(checker)
                    localStorage.clear()
                    $.get("/logout", () => {}, () => {}, false)
                    setTimeout(() => window.location.href = '/login', 5000)
                },
                data => {
                    $('#pwd_error').text(data.responseText)
                }
            )
        }

        function checkJWT() {
            console.log("Checking access JWT's expiration")
            const exp = localStorage.getItem("access_ts")
            if (exp === null) {
                new_access()
            } else {
                const exp_date = new Date(JSON.parse(exp))
                const diff = (new Date()).getTime() - exp_date.getTime()
                if (diff >= 2 * 60 * 1000) {
                    new_access()
                }
            }
        }

        function new_access() {
            console.log("Exchange refresh JWT for access JWT")
            $.get(
                '/get-access',
                data => {
                    console.log("Got a new access token")
                    $('#access_error').text('')
                    localStorage.setItem("access_ts", JSON.stringify(new Date()))
                    window.location.href = '/'
                },
                e => {
                    clearInterval(checker)
                    localStorage.clear()
                    console.warn("Failed to get a new access token", e)
                    $('#access_error').text('Failed to get a new access token, removing refresh JWT')
                }
            )
        }

        function verification_status() {
            const params = new URLSearchParams(window.location.search);
            const verifyStatus = params.get('verify');
            let message = params.get('message');

            if (verifyStatus !== null) {
                // Decode the message if not null, else use a default message
                message = (message !== null && message !== '') ? decodeURIComponent(message) :
                        (verifyStatus === "ok" ? 'Account verification successful' : 'Account verification failed');

                if (verifyStatus === "ok") {
                    $('#verify_success').text(message);
                } else {
                    $('#verify_error').text(message);
                }
            }
        }

        // Check if refresh JWT exists and has to be exchanged for access
        let checker = undefined;
        if (localStorage.getItem("refresh") !== null) {
            checkJWT()
            checker = setInterval(checkJWT, 60 * 1000)
        }
    </script>
</body>
</html>
